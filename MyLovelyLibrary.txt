CREATE TABLE Countries (
    country_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    country_name VARCHAR2(100) NOT NULL,
    iso_code VARCHAR2(2) NOT NULL,
    iso_code_3 VARCHAR2(3) NOT NULL,
    population NUMBER NOT NULL,
    currency VARCHAR2(3) NOT NULL,
    phone_code VARCHAR2(10) NOT NULL,
    flag_url VARCHAR2(255) NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    created_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (country_id)
);

CREATE TABLE Authors (
    author_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    date_of_birth DATE,
    date_of_death DATE,
    country_id NUMBER(10),
    biography CLOB,
    awards VARCHAR2(255),
    website_url VARCHAR2(255),
    photo_url VARCHAR2(255),
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (author_id)
);

CREATE TABLE Books (
    book_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    book_title VARCHAR2(50) NOT NULL,
    description CLOB,
    publication_year NUMBER(4),
    genre_id NUMBER(10),
    country_id NUMBER(10),
    publisher_id NUMBER(10),
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (book_id)
);

CREATE TABLE Publisher (
    publisher_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name VARCHAR2(50) NOT NULL,
    address VARCHAR2(255) NOT NULL,
    website_url VARCHAR2(100) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone_number VARCHAR2(20) NOT NULL,
    established_at DATE NOT NULL,
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (publisher_id)
);

CREATE TABLE Members (
    member_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone VARCHAR2(20) NOT NULL,
    address VARCHAR2(100) NOT NULL,
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (member_id)
);

CREATE TABLE Borrowings (
    borrowing_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    member_id NUMBER(10) NOT NULL,
    book_id NUMBER(10) NOT NULL,
    staff_id NUMBER(10) NOT NULL,
    borrowed_at DATE NOT NULL,
    due_date DATE NOT NULL,
    returned_at DATE,
    PRIMARY KEY (borrowing_id)
);

CREATE TABLE Genres (
    genre_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    genre_name VARCHAR2(50) NOT NULL,
    description CLOB,
    parent_genre_id NUMBER(10),
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (genre_id)
);

CREATE TABLE Author_Genres (
    id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    author_id NUMBER(10) NOT NULL,
    genre_id NUMBER(10) NOT NULL,
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Book_Authors (
    book_author_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    book_id NUMBER(10) NOT NULL,
    author_id NUMBER(10) NOT NULL,
    create_date DATE DEFAULT SYSDATE NOT NULL,
    update_date DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (book_author_id)
);

CREATE TABLE Staffs (
    staff_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone VARCHAR2(20) NOT NULL,
    salary NUMBER NOT NULL,
    fin_code VARCHAR2(7) NOT NULL,
    address VARCHAR2(100) NOT NULL,
    created_at DATE DEFAULT SYSDATE NOT NULL,
    updated_at DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (staff_id)
);

CREATE TABLE Fines (
    fine_id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    borrowing_id NUMBER(10) NOT NULL,
    amount NUMBER NOT NULL,
    issued_at DATE NOT NULL,
    paid_at DATE,
    PRIMARY KEY (fine_id)
);


ALTER TABLE Fines ADD CONSTRAINT Fines_fk1 FOREIGN KEY (borrowing_id) REFERENCES Borrowings(borrowing_id);

ALTER TABLE Authors ADD CONSTRAINT Authors_fk1 FOREIGN KEY (country_id) REFERENCES Countries(country_id);

ALTER TABLE Books ADD CONSTRAINT Books_fk1 FOREIGN KEY (genre_id) REFERENCES Genres(genre_id);
ALTER TABLE Books ADD CONSTRAINT Books_fk2 FOREIGN KEY (country_id) REFERENCES Countries(country_id);
ALTER TABLE Books ADD CONSTRAINT Books_fk3 FOREIGN KEY (publisher_id) REFERENCES Publisher(publisher_id);

ALTER TABLE Borrowings ADD CONSTRAINT Borrowings_fk1 FOREIGN KEY (member_id) REFERENCES Members(member_id);
ALTER TABLE Borrowings ADD CONSTRAINT Borrowings_fk2 FOREIGN KEY (book_id) REFERENCES Books(book_id);
ALTER TABLE Borrowings ADD CONSTRAINT Borrowings_fk3 FOREIGN KEY (staff_id) REFERENCES Staffs(staff_id);

ALTER TABLE Genres ADD CONSTRAINT Genres_fk1 FOREIGN KEY (parent_genre_id) REFERENCES Genres(genre_id);

ALTER TABLE Author_Genres ADD CONSTRAINT Author_Genres_fk1 FOREIGN KEY (author_id) REFERENCES Authors(author_id);
ALTER TABLE Author_Genres ADD CONSTRAINT Author_Genres_fk2 FOREIGN KEY (genre_id) REFERENCES Genres(genre_id);

ALTER TABLE Book_Authors ADD CONSTRAINT Book_Authors_fk1 FOREIGN KEY (book_id) REFERENCES Books(book_id);
ALTER TABLE Book_Authors ADD CONSTRAINT Book_Authors_fk2 FOREIGN KEY (author_id) REFERENCES Authors(author_id);




alter table Staffs modify fin_code invisible;
alter table Staffs modify salary invisible;




All INSERTS


INSERT INTO Staffs(staff_id,first_name,last_name,email,phone,salary,fin_code,address,created_at,updated_at)
           VALUES (1,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',10000,'123abcd',null,null,null);

INSERT INTO Staffs(staff_id,first_name,last_name,email,phone,salary,fin_code,address,created_at,updated_at)
           VALUES (2,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',10000,'123abcd',null,null,null);

INSERT INTO Staffs(staff_id,first_name,last_name,email,phone,salary,fin_code,address,created_at,updated_at)
           VALUES (3,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',10000,'123abcd',null,null,null);

INSERT INTO Staffs(staff_id,first_name,last_name,email,phone,salary,fin_code,address,created_at,updated_at)
           VALUES (4,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',10000,'123abcd',null,null,null);

INSERT INTO Staffs(staff_id,first_name,last_name,email,phone,salary,fin_code,address,created_at,updated_at)
           VALUES (5,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',10000,'123abcd',null,null,null);




INSERT INTO Members(member_id,first_name,last_name,email,phone,address,created_at,updated_at)
           VALUES (1,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null);
INSERT INTO Members(member_id,first_name,last_name,email,phone,address,created_at,updated_at)
           VALUES (2,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null);
INSERT INTO Members(member_id,first_name,last_name,email,phone,address,created_at,updated_at)
           VALUES (3,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null);
INSERT INTO Members(member_id,first_name,last_name,email,phone,address,created_at,updated_at)
           VALUES (4,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null);
INSERT INTO Members(member_id,first_name,last_name,email,phone,address,created_at,updated_at)
           VALUES (5,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null);
INSERT INTO Members(member_id,first_name,last_name,email,phone,address,created_at,updated_at)
           VALUES (6,'Eltun','Aslanov','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null);





INSERT INTO Publisher(publisher_id,name,email,phone_number,address,created_at,updated_at,website_url,established_at)
           VALUES (1,'Eltun','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null,null,null);
INSERT INTO Publisher(publisher_id,name,email,phone_number,address,created_at,updated_at,website_url,established_at)
           VALUES (2,'Eltun','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null,null,null);
INSERT INTO Publisher(publisher_id,name,email,phone_number,address,created_at,updated_at,website_url,established_at)
           VALUES (3,'Eltun','eltunaslanov@gmail.com','+994 70 721 97 89',null,null,null,null,null);




INSERT INTO Genres (genre_id,genre_name,description,parent_genre_id,created_at,updated_at)
           VALUES (1,'fiction',null,null,null,null);
INSERT INTO Genres (genre_id,genre_name,description,parent_genre_id,created_at,updated_at)
           VALUES (2,'spy fiction',null,1,null,null); 
INSERT INTO Genres (genre_id,genre_name,description,parent_genre_id,created_at,updated_at)
           VALUES (3,'superhero fiction',null,1,null,null);
INSERT INTO Genres (genre_id,genre_name,description,parent_genre_id,created_at,updated_at)
           VALUES (4,'suspense',null,null,null,null);





INSERT INTO Countries  (country_id,country_name,iso_code,iso_code_3,population,currency,phone_code,flag_url,created_at,updated_at)
           VALUES (1,'Azerbaijan','AZ','AZE',10000,'AZN','+994',null,null,null); 
INSERT INTO Countries  (country_id,country_name,iso_code,iso_code_3,population,currency,phone_code,flag_url,created_at,updated_at)
           VALUES (2,'Turkish','TR','TUR',100000,'TL','+90',null,null,null); 
INSERT INTO Countries  (country_id,country_name,iso_code,iso_code_3,population,currency,phone_code,flag_url,created_at,updated_at)
           VALUES (3,'America','US','USA',100000,'USD','+1',null,null,null);
INSERT INTO Countries  (country_id,country_name,iso_code,iso_code_3,population,currency,phone_code,flag_url,created_at,updated_at)
           VALUES (4,'Russia','RU','RUS',100000,'RUB','+7',null,null,null);



INSERT INTO Authors(author_id,first_name,last_name,date_of_birth,date_of_death,country_id,biography,awards,website_url,photo_url,created_at,updated_at)
    VALUES (1,'Ernest','Hemingway','01-01-1899','01-01-1961',3,null,null,null,null,null,null);
INSERT INTO Authors(author_id,first_name,last_name,date_of_birth,date_of_death,country_id,biography,awards,website_url,photo_url,created_at,updated_at)
    VALUES (2,'Dostoyevsky ','Fyodor','11-11-1821','09-02-1881',4,null,null,null,null,null,null); 
INSERT INTO Authors(author_id,first_name,last_name,date_of_birth,date_of_death,country_id,biography,awards,website_url,photo_url,created_at,updated_at)
    VALUES (3,'Atay','Oğuz','12-10-1934','13-12-1977',2,null,null,null,null,null,null);





insert into Author_Genres(id,author_id,genre_id,created_at,updated_at)
values (1,1,1,null,null);
insert into Author_Genres(id,author_id,genre_id,created_at,updated_at)
values (2,2,1,null,null);
insert into Author_Genres(id,author_id,genre_id,created_at,updated_at)
values (3,3,1,null,null);





INSERT INTO Books(book_id,book_title,description,publication_year,genre_id,country_id,publisher_id, created_at,updated_at)
    VALUES (1,'The Old Man and the Sea',null,'01-01-1950',1,3,1,null,null);
INSERT INTO Books(book_id,book_title,description,publication_year,genre_id,country_id,publisher_id, created_at,updated_at)
    VALUES (2,'The Brothers Karamazov',null,'01-01-1970',4,4,2,null,null);
INSERT INTO Books(book_id,book_title,description,publication_year,genre_id,country_id,publisher_id, created_at,updated_at)
    VALUES (3,'Tutunamayanlar',null,'01-01-1971',1,2,3,null,null);



INSERT INTO Borrowings(borrowing_id,member_id,book_id,staff_id,borrowed_at,due_date,returned_at)
    VALUES (1,1,2,1,'10-11-2024','30-11-2024','03-12-2024');
INSERT INTO Borrowings(borrowing_id,member_id,book_id,staff_id,borrowed_at,due_date,returned_at)
    VALUES (2,2,3,3,'01-10-2024','21-10-2024','30-12-2024');
INSERT INTO Borrowings(borrowing_id,member_id,book_id,staff_id,borrowed_at,due_date,returned_at)
    VALUES (3,3,1,2,'05-01-2024','25-01-2024','15-01-2024');


INSERT INTO Book_Authors(book_author_id,book_id,author_id,create_date,update_date)
    VALUES (1,1,1,null,null);
INSERT INTO Book_Authors(book_author_id,book_id,author_id,create_date,update_date)
    VALUES (2,2,2,null,null);
INSERT INTO Book_Authors(book_author_id,book_id,author_id,create_date,update_date)
    VALUES (3,3,3,null,null);




INSERT INTO Fines(fine_id,borrowing_id,amount,issued_at,paid_at)
    VALUES (1,1, 15,'05-12-2024','10-12-2024');
INSERT INTO Fines(fine_id,borrowing_id,amount,issued_at,paid_at)
    VALUES (2,2, 365,'30-12-2024','31-12-2024');
INSERT INTO Fines(fine_id,borrowing_id,amount,issued_at,paid_at)
    VALUES (3,3, 0,'15-01-2024',null);

(SELECT CASE WHEN returned_at < due_date THEN 0
                ELSE (returned_at - due_date) * 5 END
        FROM Borrowings WHERE borrowing_id = 1)




1. Kitabların müəllifləri ilə birlikdə siyahısı
SELECT 
    b.book_title AS "Book Title",
    a.first_name || ' ' || a.last_name AS "Author Name"
FROM 
    Books b
JOIN 
    Book_Authors ba ON b.book_id = ba.book_id
JOIN 
    Authors a ON ba.author_id = a.author_id;



2. Bir ölkədə yazılmış bütün kitablar
SELECT 
    b.book_title AS "Book Title", 
    c.country_name AS "Country"
FROM 
    Books b
JOIN 
    Countries c ON b.country_id = c.country_id
WHERE 
    b.country_id = 3;


3. Geri qaytarılmamış cərimələr
SELECT 
    f.fine_id AS "Fine ID",
    m.first_name || ' ' || m.last_name AS "Member Name",
    f.amount AS "Fine Amount",
    f.issued_at AS "Issued Date"
FROM 
    Fines f
JOIN 
    Borrowings b ON f.borrowing_id = b.borrowing_id
JOIN 
    Members m ON b.member_id = m.member_id
WHERE 
    f.paid_at IS NULL;


4. Ən çox kitab yazmış müəlliflər
SELECT 
    a.first_name || ' ' || a.last_name AS "Author Name",
    COUNT(ba.book_id) AS "Book Count"
FROM 
    Authors a
JOIN 
    Book_Authors ba ON a.author_id = ba.author_id
GROUP BY 
    a.author_id, a.first_name, a.last_name
ORDER BY 
    "Book Count" DESC;




5. Kitab növlərinə görə cəmi kitab sayı
SELECT 
    g.genre_name AS "Genre Name",
    COUNT(b.book_id) AS "Number of Books"
FROM 
    Genres g
LEFT JOIN 
    Books b ON g.genre_id = b.genre_id
GROUP BY 
    g.genre_id, g.genre_name;


6. Gecikmə ilə geri qaytarılmış kitablar
SELECT 
    b.book_title AS "Book Title",
    m.first_name || ' ' || m.last_name AS "Borrower Name",
    br.due_date AS "Due Date",
    br.returned_at AS "Returned Date",
    (br.returned_at - br.due_date) AS "Days Late"
FROM 
    Borrowings br
JOIN 
    Books b ON br.book_id = b.book_id
JOIN 
    Members m ON br.member_id = m.member_id
WHERE 
    br.returned_at > br.due_date;



7. Ən çox borc verilmiş kitablar

SELECT 
    b.book_title AS "Book Title",
    COUNT(br.borrowing_id) AS "Borrowed Count"
FROM 
    Books b
JOIN 
    Borrowings br ON b.book_id = br.book_id
GROUP BY 
    b.book_id, b.book_title
ORDER BY 
    "Borrowed Count" DESC;




8. Üzvün (member_id = 1) borcları və cərimələri
SELECT 
    m.first_name || ' ' || m.last_name AS "Member Name",
    b.book_title AS "Borrowed Book",
    br.borrowed_at AS "Borrowed Date",
    br.due_date AS "Due Date",
    br.returned_at AS "Returned Date",
    COALESCE(f.amount, 0) AS "Fine Amount",
    f.paid_at AS "Fine Paid Date"
FROM 
    Members m
JOIN 
    Borrowings br ON m.member_id = br.member_id
JOIN 
    Books b ON br.book_id = b.book_id
LEFT JOIN 
    Fines f ON br.borrowing_id = f.borrowing_id
WHERE 
    m.member_id = 1;






9.Müəyyən bir növə (genre_id = 1) aid kitablar və müəlliflər
SELECT 
    b.book_title AS "Book Title",
    a.first_name || ' ' || a.last_name AS "Author Name",
    g.genre_name AS "Genre"
FROM 
    Books b
JOIN 
    Book_Authors ba ON b.book_id = ba.book_id
JOIN 
    Authors a ON ba.author_id = a.author_id
JOIN 
    Genres g ON b.genre_id = g.genre_id
WHERE 
    b.genre_id = 1;



10. Müəlliflər üzrə ən çox oxunan kitablar
SELECT 
    a.first_name || ' ' || a.last_name AS author_name,
    b.book_title,
    COUNT(br.borrowing_id) AS borrow_count
FROM 
    Authors a
JOIN 
    Book_Authors ba ON a.author_id = ba.author_id
JOIN 
    Books b ON ba.book_id = b.book_id
JOIN 
    Borrowings br ON b.book_id = br.book_id
GROUP BY 
    a.first_name, a.last_name, b.book_title
ORDER BY 
    borrow_count DESC;



11. Ən aktiv oxucular
SELECT 
    m.first_name || ' ' || m.last_name AS member_name,
    COUNT(br.borrowing_id) AS borrow_count
FROM 
    Members m
JOIN 
    Borrowings br ON m.member_id = br.member_id
GROUP BY 
    m.first_name, m.last_name
ORDER BY 
    borrow_count DESC;


12. Hazırda geri qaytarılmamış kitablar
SELECT 
    m.first_name || ' ' || m.last_name AS member_name,
    b.book_title,
    br.borrowed_at,
    br.due_date
FROM 
    Borrowings br
JOIN 
    Members m ON br.member_id = m.member_id
JOIN 
    Books b ON br.book_id = b.book_id
WHERE 
    br.returned_at IS NULL;


13. Qaytarılma tarixi yaxınlaşan kitablar
SELECT 
    b.book_title,
    m.first_name || ' ' || m.last_name AS member_name,
    br.due_date,
    DATEDIFF(br.due_date, CURRENT_DATE) AS days_left
FROM 
    Borrowings br
JOIN 
    Books b ON br.book_id = b.book_id
JOIN 
    Members m ON br.member_id = m.member_id
WHERE 
    br.due_date BETWEEN CURRENT_DATE AND DATE_ADD(CURRENT_DATE, INTERVAL 7 DAY)
      AND br.returned_at IS NULL
ORDER BY 
    days_left ASC;


13. Janr üzrə mövcud kitabların sayı
SELECT 
    g.genre_name,
    COUNT(b.book_id) AS available_books
FROM 
    Genres g
LEFT JOIN 
    Books b ON g.genre_id = b.genre_id
LEFT JOIN 
    Borrowings br ON b.book_id = br.book_id AND br.returned_at IS NULL
WHERE 
    br.borrowing_id IS NULL
GROUP BY 
    g.genre_name;

